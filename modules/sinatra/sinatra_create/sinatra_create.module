<?php
/**
 * @file
 * Allows users to create their own wishlists called "boards".
 */
  
/**
 * Implements hook_menu()
 */
function sinatra_create_menu() {
 
	$items = array(
		'create/recording' => array(
			'title' => 'Create new recording',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('sinatra_create_form', '0'),
			'access arguments' => array('sinatra_create'),
		),
		'create/recording/%' => array(
			'title' => 'Create new recording',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('sinatra_create_form', 2),
			'access arguments' => array('sinatra_create'),

		),
	);
	return $items;
}

function sinatra_create_permission() {
  return array(
    'sinatra_create' => array(
      'title' => t('Create'),
      'description' => t('Create.'),
    ),
  );
}

function sinatra_create_form($form, &$form_state, $id) {
	global $user;
	
	$firstPass = true;
	
	if(isset($form_state['storage']['results'])) {
	  $form['results'] = array (
            '#markup' => $form_state['storage']['results'],
            '#prefix' => '<p>',
            '#suffix' => '</p>',
	  );
	  $firstPass = false;
	}
		
	$song_query = db_query('SELECT song_id, title FROM `sinatra_song` ORDER BY `title`'	)->fetchAll();
			
	foreach ( $song_query as $record ) {
		$songs[$record->song_id] = $record->title;
	}
	
	
    $form['songs'] = array(
        '#type' => 'fieldset',
        '#title' => t('Songs'),
        '#prefix' => '<div id="entry-fieldset-wrapper">',
        '#suffix' => '</div>',
    );
	
	if( $id != 0 ) {
		$form_state['recording_id'] = $id;
	}

    if (empty($form_state['num_names'])) {
		if( $id != 0 ) {

			$query = db_query("SELECT * FROM `sinatra_recording_song` WHERE recording_id = :id",
			array(
				':id' => $id,
			))->fetchAllAssoc('medley_position');	
		
			$form_state['num_names'] = count($query);
		} else {	
			$form_state['num_names'] = 1;
		}
	} else {
		$firstPass = false;
	}
     
	
	for ($i = 0; $i < $form_state['num_names']; $i++) {

        $form['songs']['song'][$i] = array(
			'#type' => 'select',
			'#title' => 'Song',
			'#options' => $songs,
			'#required' => TRUE,        
		'#validated' => TRUE,
		);
    }
	
	$form['songs']['parody'] = array(
		'#type' => 'checkbox',
		'#title' => 'Parody',
	);

	if( $id != 0 && $firstPass ) {
		$count = 0;
		foreach ($query as $record) {
			$form['songs']['song'][$count]['#default_value'] = $record->song_id;
			$count++;
			if( $record->parody ) {
				$form['songs']['parody']['#value'] = TRUE;
			}
		}
	}

    $form['songs']['add_another'] = array(
        '#type' => 'submit',
        '#value' => t('Add another song'),
        '#submit' => array('add_more_song'),
        '#ajax' => array(
            'callback' => 'add_more_song_callback',
            'wrapper' => 'entry-fieldset-wrapper',
        ),
    );
	
	
	$artist_query = db_query('SELECT display_id, display_name FROM `sinatra_artist_display` ORDER BY `display_name` ASC'	)->fetchAll();
	
	foreach ( $artist_query as $record ) {
		$artists[$record->display_id] = $record->display_name;
	}
	
	$form['artist'] = array(
		'#type' => 'select',
		'#title' => 'Artist',
		'#options' => $artists,
		'#required' => TRUE,
	);	
	
	$session_query = db_query('SELECT `session_id`, `date_display` FROM `sinatra_session` ORDER BY `date` ASC'	)->fetchAll();
		
	foreach ( $session_query as $record ) {
		$sessions[$record->session_id] = $record->date_display;
	}
	
	$form['session'] = array(
		'#type' => 'select',
		'#title' => 'Session',
		'#options' => $sessions,
		'#required' => TRUE,
	);	
	$form['session_position'] = array(
		'#type' => 'textfield',
		'#title' => 'Position',
		'#required' => TRUE,
	);		
	$types = array('Studio'=>'Studio', 'Live'=>'Live', 'Radio'=>'Radio', 'Alternate take'=>'Alternate take', 'Television'=>'Television', 'Film'=>'Film', 'Electronic duet'=>'Electronic duet', 'Session material'=>'Session material', 'Edit'=>'Edit', 'Demo'=>'Demo');
	
	$form['type'] = array(
		'#type' => 'select',
		'#title' => 'Type',
		'#options' => $types,
		'#required' => TRUE,
		'#default_value' => 'Studio'
	);		
	
	$proj_types = array('album'=>'album', 'concert'=>'concert', 'radio'=>'radio', 'film'=>'film', 'television'=>'television');
	
	$form['proj_type'] = array(
		'#type' => 'select',
		'#title' => 'Project Type',
		'#options' => $proj_types,
		'#required' => TRUE,
		'#default_value' => 'album'
	);			
	
	$project_query = db_query('SELECT album_id, title FROM `sinatra_album` ORDER BY title ASC')->fetchAll();
	$albums[0] = "Select me if project_type != album";
	foreach ( $project_query as $record ) {
		$albums[$record->album_id] = $record->title;
	}
	
	// TODO MULTIPLE ALBUMS?
	$form['album'] = array(
		'#type' => 'select',
		'#title' => 'Album',
		'#options' => $albums,
		'#required' => TRUE,
		'#default_value' => 0
	);		
	
	$project_query = db_query("SELECT concert_id, location, date_display FROM `sinatra_concert` ORDER BY date ASC")->fetchAll();
	$concerts[0] = "Select me if project_type != concert";
	foreach ( $project_query as $record ) {
		$concerts[$record->concert_id] = $record->location . " - " . $record->date_display;
	}
	$form['concert'] = array(
		'#type' => 'select',
		'#title' => 'Concert',
		'#options' => $concerts,
		'#required' => TRUE,
		'#default_value' => "Select me if project_type != concert"
	);	
		
	$project_query = db_query("SELECT radio_id, series, date_display FROM `sinatra_radio` ORDER BY series ASC")->fetchAll();
	
	$radios[0] = "Select me if project_type != radio";
	foreach ( $project_query as $record ) {
		$radios[$record->radio_id] = $record->series . " - " . $record->date_display;
	}
	$form['radio'] = array(
		'#type' => 'select',
		'#title' => 'Radio',
		'#options' => $radios,
		'#required' => TRUE,
		'#default_value' => "Select me if project_type != radio"
	);	
		
	$project_query = db_query("SELECT television_id, series, date_display FROM `sinatra_television` ORDER BY series ASC")->fetchAll();
	$tv[0] = "Select me if project_type != television";
	foreach ( $project_query as $record ) {
		$tv[$record->television_id] = $record->series . " - " . $record->date_display;
	}
	$form['television'] = array(
		'#type' => 'select',
		'#title' => 'Television',
		'#options' => $tv,
		'#required' => TRUE,
		'#default_value' => "Select me if project_type != television"
	);	
		
	$project_query = db_query('SELECT film_id, title FROM `sinatra_film` ORDER BY title ASC')->fetchAll();
	$film[0] = "Select me if project_type != film";
	foreach ( $project_query as $record ) {
		$film[$record->film_id] = $record->title;
	}
	
	$form['film'] = array(
		'#type' => 'select',
		'#title' => 'Film',
		'#options' => $film,
		'#required' => TRUE,
		'#default_value' => "Select me if project_type != film"
	);	
	$form['position'] = array(
		'#type' => 'textfield',
		'#title' => 'Position',
		'#required' => TRUE,
	);	
	$form['length'] = array(
		'#type' => 'textfield',
		'#title' => 'Length',
		'#required' => FALSE,
	);		
	$form['matrix'] = array(
		'#type' => 'textfield',
		'#title' => 'Matrix #',
		'#required' => FALSE,
	);		
	$form['take'] = array(
		'#type' => 'textfield',
		'#title' => 'Take',
		'#required' => FALSE,
	);		
	$form['notes'] = array(
		'#type' => 'textarea',
		'#title' => 'Notes',
		'#required' => FALSE,
	);	
	
	$form['lyrics'] = array(
		'#type' => 'textarea',
		'#title' => 'Lyrics',
		'#required' => FALSE,
	);	
	$form['youtube'] = array(
		'#type' => 'textfield',
		'#title' => 'YouTube',
		'#required' => FALSE,
	);		
	
	
	// End first section 
	/////////////////
	
	// Start get info for editing previous
	if( $id != 0  && $firstPass) {
		$query = db_query('SELECT * FROM `sinatra_recording`, `sinatra_session_recording` WHERE sinatra_recording.recording_id = :id AND sinatra_session_recording.recording_id = :id',
								array(
									':id' => $id,
								))->fetchAssoc();

		$form['artist']['#value'] = $query['artist_display'];
		$form['type']['#value'] = $query['type'];
		$form['length']['#value'] = $query['length'];
		$form['lyrics']['#value'] = $query['lyrics'];
		$form['notes']['#value'] = $query['notes'];
		$form['proj_type']['#value'] = $query['project_type'];
		$form['take']['#value'] = $query['take_number'];
		$form['matrix']['#value'] = $query['matrix_number'];
		$form['session']['#value'] = $query['session_id'];
		$form['session_position']['#value'] = $query['session_position'];
		
		if( $query['project_type'] == "album" ) {
			$query = db_query('SELECT * FROM `sinatra_recording_album` WHERE recording_id = :id',
				array(
					':id' => $id,
				))->fetchAssoc();	
			$form['album']['#value'] = $query['album_id'];
			$form['position']['#value'] = $query['album_position'];
		} else if( $query['project_type'] == "concert" ) {
			$query = db_query('SELECT * FROM `sinatra_recording_concert` WHERE recording_id = :id',
				array(
					':id' => $id,
				))->fetchAssoc();	
			$form['concert']['#value'] = $query['concert_id'];
			$form['position']['#value'] = $query['concert_position'];
		} else if( $query['project_type'] == "radio" ) {
			$query = db_query('SELECT * FROM `sinatra_recording_radio` WHERE recording_id = :id',
				array(
					':id' => $id,
				))->fetchAssoc();	
			$form['radio']['#value'] = $query['radio_id'];
			$form['position']['#value'] = $query['radio_position'];
	
			print_r($query);
		} else if( $query['project_type'] == "film" ) {
			$query = db_query('SELECT * FROM `sinatra_recording_film` WHERE recording_id = :id',
				array(
					':id' => $id,
				))->fetchAssoc();	
			$form['film']['#value'] = $query['film_id'];
			$form['position']['#value'] = $query['film_position'];
	
			print_r($query);
		} else if( $query['project_type'] == "television" ) {
			$query = db_query('SELECT * FROM `sinatra_recording_television` WHERE recording_id = :id',
				array(
					':id' => $id,
				))->fetchAssoc();	
			$form['television']['#value'] = $query['television_id'];
			$form['position']['#value'] = $query['television_position'];
	
			print_r($query);
		} else if( $query['project_type'] == "album" ) {
			$query = db_query('SELECT * FROM `sinatra_recording_album` WHERE recording_id = :id',
				array(
					':id' => $id,
				))->fetchAssoc();	
			$form['album']['#value'] = $query['album_id'];
			$form['position']['#value'] = $query['album_position'];
	
			print_r($query);
		} 
		
		$query = db_query("SELECT * FROM `sinatra_recording_source` WHERE recording_id = :id AND source='YouTube'",
			array(
				':id' => $id,
			))->fetchAssoc();	
			$form['youtube']['#value'] = $query['id'];
		
	}
	
	
	// End edit info
	///////////////////
	
	// Start people
	
	$role_query = db_query('SELECT role_id, name FROM `sinatra_role` ORDER BY name ASC')->fetchAll();
	$person_query = db_query('SELECT person_id, first_name, surname FROM `sinatra_person` ORDER BY surname, first_name ASC')->fetchAll();
	
	$roles[0] = "-";
	foreach ( $role_query as $record ) {
		$roles[$record->role_id] = $record->name;
	}
	$peoples[0] = "-";
	foreach ( $person_query as $record ) {
		$peoples[$record->person_id] = $record->first_name . " " . $record->surname;
	}
	
	//print_r($form_state);
	
    $form['people'] = array(
        '#type' => 'fieldset',
        '#title' => t('Personnel'),
        '#prefix' => '<div id="people-wrapper">',
        '#suffix' => '</div>',
		'#tree' => TRUE,   
	);

    if (empty($form_state['num_people'])) {
		if( $id != 0 ) {
			$query = db_query("SELECT * FROM `sinatra_recording_person` WHERE recording_id = :id",
			array(
				':id' => $id,
			))->fetchAll();	
		
			$form_state['num_people'] = count($query);
		} else {
			$form_state['num_people'] = 40;
		}
    }
	


		
	for( $i = 0; $i < $form_state['num_people']; $i++ ) {
		$form['people'][$i] = array(
			'#type' => 'fieldset',
			'#title' => 'Person ' . ($i+1),
			'#prefix' => '<div>',
			'#suffix' => '</div>',
			
		);
		
		$form['people'][$i]['role'] = array(
			'#type' => 'select',
			'#title' => 'Role',
			'#options' => $roles,
			'#default_value' => 0,
			'#required' => TRUE,
			'#validated' => TRUE
		);
		$form['people'][$i]['person'] = array(
			'#type' => 'select',
			'#title' => 'Person',
			'#options' => $peoples,
			'#default_value' => 0,
			'#required' => TRUE,
			'#validated' => TRUE
		);	
	}
	
	if( $id != 0  && $firstPass) {
		$count = 0;
		foreach ($query as $record) {
			$form['people'][$count]['role']['#default_value'] = $record->role_id;
			$form['people'][$count]['person']['#default_value'] = $record->person_id;
			$count++;
		}
	}

	$form['people']['add_another'] = array(
        '#type' => 'submit',
        '#value' => t('Add another person'),
        '#submit' => array('add_more_person'),
        '#ajax' => array(
            'callback' => 'add_more_person_callback',
            'wrapper' => 'people-wrapper',
        ),
    );
    
	$form['submit_button'] = array(
		'#type' => 'submit',
		'#value' => t('Create'),
        '#submit' => array('create_recording_form_submit'),
	);

	return $form;
}

// AJAX for songs
function add_more_song($form, &$form_state) {

    if (!isset($form_state['num_names'])) {
        $form_state['num_names'] = 0;
        $form_state['num_names']++;
    }

    $form_state['num_names']++;
    $form_state['rebuild'] = TRUE;
}

function add_more_song_callback($form, $form_state) {
    return $form['songs'];
}

function add_more_person($form, &$form_state) {

    if (!isset($form_state['num_people'])) {
        $form_state['num_people'] = 40;
        $form_state['num_people']++;
    }

    $form_state['num_people']++;
    $form_state['rebuild'] = TRUE;
}

function add_more_person_callback($form, $form_state) {
    return $form['people'];
}

function create_recording_form_submit($form, &$form_state) {
	global $base_url;
	
	if( !empty($form_state['recording_id']) ) {
		$recording_id = $form_state['recording_id'];
		db_delete('sinatra_recording')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_recording_person')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_recording_song')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_recording_source')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_session_recording')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_recording_album')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_recording_concert')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_recording_radio')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_recording_film')->condition('recording_id', $recording_id)->execute();
		db_delete('sinatra_recording_television')->condition('recording_id', $recording_id)->execute();
	}
	
	$num_songs = $form_state['num_names'];
	$num_people = $form_state['num_people'];
	$parody = $form['songs']['parody']['#value'];
	$artist = $form['artist']['#value'];
	$session = $form['session']['#value'];
	$session_position = $form['session_position']['#value'];
	$type = $form['type']['#value'];
	$proj_type = $form['proj_type']['#value'];
	$album = $form['album']['#value'];
	$concert = $form['concert']['#value'];
	$radio = $form['radio']['#value'];
	$television = $form['television']['#value'];
	$film = $form['film']['#value'];
	$position = $form['position']['#value'];
	$length = $form['length']['#value'];
	$matrix = $form['matrix']['#value'];
	$take = $form['take']['#value'];
	$notes = $form['notes']['#value'];
	$lyrics = $form['lyrics']['#value'];
	$youtube = $form['youtube']['#value'];
	
	if( $proj_type == 'album' && $album == 0 ) {
		$form_state['storage']['results'] = "ERROR - PLEASE PROVIDE ALBUM";
	} else if( $proj_type == 'concert' && $concert == 0 ) {
		$form_state['storage']['results'] = "ERROR - PLEASE PROVIDE CONCERT";
	} else if( $proj_type == 'radio' && $radio == 0 ) {
		$form_state['storage']['results'] = "ERROR - PLEASE PROVIDE RADIO";
	} else if( $proj_type == 'television' && $television == 0 ) {
		$form_state['storage']['results'] = "ERROR - PLEASE PROVIDE TELEVISION";
	} else if( $proj_type == 'film' && $film == 0 ) {
		$form_state['storage']['results'] = "ERROR - PLEASE PROVIDE FILM";
	} else {
		if( !empty($form_state['recording_id']) ) {
			$id = $form_state['recording_id'];
			db_insert('sinatra_recording')
				->fields( array( 
					'recording_id' => $id,
					'artist_display' => $artist,
					'type' => $type,
					'length' => $length,
					'lyrics' => $lyrics,
					'notes' => $notes,
					'project_type' => $proj_type,
					'take_number' => $take,
					'matrix_number' => $matrix
				))
				->execute();
		} else {
			$id = db_insert('sinatra_recording')
				->fields( array( 
					// recording_id is AUTO_INCREMENT
					'artist_display' => $artist,
					'type' => $type,
					'length' => $length,
					'lyrics' => $lyrics,
					'notes' => $notes,
					'project_type' => $proj_type,
					'take_number' => $take,
					'matrix_number' => $matrix
				))
				->execute();
		}
		for ($i = 0; $i < $num_songs; $i++) {
			$song = $form['songs']['song'][$i]['#value'];
			if( $song != 0 && $song != null ) {
				db_insert('sinatra_recording_song')
					->fields( array( 
						'recording_id' => $id,
						'song_id' => $song,
						'medley_position' => $i+1,
						'parody'=>$parody
					))
					->execute();
			}
		}
		
		db_insert('sinatra_session_recording')
				->fields( array( 
					'recording_id' => $id,
					'session_id' => $session,
					'session_position' => $session_position,
				))
				->execute();
		if( $youtube != null ) {
			db_insert('sinatra_recording_source')
					->fields( array( 
						'recording_id' => $id,
						'source' => "YouTube",
						'id' => $youtube,
					))
					->execute();
		}
		
		if( $proj_type == 'album' ) {
			db_insert('sinatra_recording_album')
				->fields( array( 
					'recording_id' => $id,
					'album_id' => $album,
					'album_position' => $position
				))
				->execute();			
		} else if( $proj_type == 'concert' ) {
			db_insert('sinatra_recording_concert')
				->fields( array( 
					'recording_id' => $id,
					'concert_id' => $concert,
					'concert_position' => $position
				))
				->execute();			
		} else if( $proj_type == 'film' ) {
			db_insert('sinatra_recording_film')
				->fields( array( 
					'recording_id' => $id,
					'film_id' => $film,
					'film_position' => $position
				))
				->execute();			
		} else if( $proj_type == 'television' ) {
			db_insert('sinatra_recording_television')
				->fields( array( 
					'recording_id' => $id,
					'television_id' => $television,
					'television_position' => $position
				))
				->execute();			
		} else {
			db_insert('sinatra_recording_radio')
				->fields( array( 
					'recording_id' => $id,
					'radio_id' => $radio,
					'radio_position' => $position
				))
				->execute();			
		}
		
		$loop = 0;
		for ($i = 0; $i < $num_people; $i++) {
			$role = $form['people'][$i]['role']['#value'];
			$person = $form['people'][$i]['person']['#value'];
			if( $role != 0 && $person != 0 ) {
				$loop++;
				db_insert('sinatra_recording_person')
					->fields( array( 
						'recording_id' => $id,
						'person_id' => $person,
						'role_id' => $role,
					))
					->execute();
			}
		}
		
		$form_state['storage']['results'] = '<a href="' . $base_url . '/recording/' . $id .'">' . "Your recording has been added as recording #" . $id . "</a>";
	}	
	$form_state['rebuild'] = TRUE;
}	